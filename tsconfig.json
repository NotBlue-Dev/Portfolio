{
  "compilerOptions": {
    "baseUrl": ".",
    "target": "ES5",                                      /* Specify a set of bundled library declaration files that describe the target runtime environment. */
    "module": "commonjs",
    "checkJs": true,                          /* Enable error reporting in type-checked JavaScript files. */
    "esModuleInterop": true,                  /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */ // "preserveSymlinks": true,                         /* Disable resolving symlinks to their realpath. This correlates to the same flag in node. */
    "forceConsistentCasingInFileNames": true, /* Ensure that casing is correct in imports. */ /* Type Checking */
    "strict": true,                           /* Enable all strict type-checking options. */ // "noImplicitAny": true,                            /* Enable error reporting for expressions and declarations with an implied 'any' type. */
    "noUnusedLocals": true,                   /* Enable error reporting when local variables aren't read. */
    "noUnusedParameters": true,               /* Raise an error when a function parameter isn't read. */
    "skipLibCheck": true                      /* Skip type checking all .d.ts files. */,
    "lib": [
      "dom",
      "dom.iterable",
      "esnext"
    ],
    "allowJs": true,
    "noEmit": true,
    "incremental": true,
    "moduleResolution": "node",
    "resolveJsonModule": true,
    "isolatedModules": true,
    "jsx": "preserve",
    "plugins": [
      {
        "name": "next"
      }
    ],
    "paths": {
      "@components/*": [
        "components/*"
      ],
      "@utils/*": [
        "utils/*"
      ],
      "@content/*": [
        "content/*"
      ],
      "@styles/*": [
        "styles/*"
      ],
      "@layout/*": [
        "layout/*"
      ],
    },          
  },
  "include": ["next-env.d.ts", "**/*.ts", "**/*.tsx", ".next/types/**/*.ts"],
  "exclude": ["node_modules"]
}
